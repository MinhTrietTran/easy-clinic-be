version: '3.8'

services:
  # === User Service ===
  user_service_db:
    image: postgres:16
    container_name: user_service_db
    restart: always
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: user_service_user
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - user_service_postgres_data:/var/lib/postgresql/data

  user_service:
    build: ./user_service
    container_name: user_service_app
    ports:
      - "5001:5000"
    depends_on:
      - user_service_db
      - consul
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - POSTGRES_DB=user_service_db
      - POSTGRES_USER=user_service_user
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_HOST=user_service_db # Rất quan trọng: trỏ đúng service DB
      - POSTGRES_PORT=5432

  # === Appointment Service ===
  appointment_service_db:
    image: postgres:16
    container_name: appointment_service_db
    restart: always
    environment:
      POSTGRES_DB: appointment_service_db
      POSTGRES_USER: appointment_user
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5433:5432"
    volumes:
      - appointment_service_postgres_data:/var/lib/postgresql/data

  appointment_service:
    build: ./appointment_service
    container_name: appointment_service_app
    ports:
      - "5002:5000"
    depends_on:
      - appointment_service_db
      - consul
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - POSTGRES_DB=appointment_service_db
      - POSTGRES_USER=appointment_user
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_HOST=appointment_service_db
      - POSTGRES_PORT=5432

  # === Notification service ===
  notification_service:
    build: 
      context: ./notification_service
      dockerfile: dockerfile
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:7000"
    volumes:
      - .:/app
    ports:
      - "7000:7000"
    environment:
      - DJANGO_SETTINGS_MODULE=appointment_notifier.settings
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_NAME=notification_db
      - DB_USER=django_user
      - DB_PASSWORD=yourpassword
      - DB_HOST=postgres  
      - DB_PORT=5432
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=tieu2405@gmail.com
      - EMAIL_HOST_PASSWORD=jvlx zaet jhmk ipjz
      - EXTERNAL_API_URL=https://api.example.com/appointments
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - rabbitmq
      - celery

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  celery:
    build: 
      context: ./appointment_notifier
      dockerfile: dockerfile
    command: celery -A appointment_notifier worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=appointment_notifier.settings
      - DB_NAME=notification_db
      - DB_USER=django_user
      - DB_PASSWORD=yourpassword
      - DB_HOST=postgres  
      - DB_PORT=5432
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=tieu2405@gmail.com
      - EMAIL_HOST_PASSWORD=jvlx zaet jhmk ipjz
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
  notification_service_db:
    image: postgres:16
    container_name: notification_service_db
    restart: always
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: user_service_user
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - user_service_postgres_data:/var/lib/postgresql/data
  # === Consul ===
  consul:
    image: consul:1.1.0
    container_name: consul
    ports:
      - "8500:8500"  # Giao diện Web UI
      - "8600:8600/udp"  # DNS server (nếu dùng)
    command: agent -dev -client=0.0.0.0

  # === Resolver Service ===
  resolver_service:
    build: ./resolver_service
    container_name: resolver_service
    ports:
      - "7070:7000"
    environment:
      - ENV=local  # hoặc prod nếu deploy thật

volumes:
  user_service_postgres_data:
  appointment_service_postgres_data:
